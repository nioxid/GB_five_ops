---
# Prometheus
- name: Install Prometheus
  block:
    - name: update and install prometheus
      apt:
        name: prometheus
        state: latest
        update_cache: yes
        cache_valid_time: 3600

    - name: prometheus args
      template:
        src: prometheus.j2
        dest: /etc/default/prometheus
        mode: 0644
        owner: root
        group: root
      notify: restart_prometheus

    - name: prometheus configuration file
      template:
        src: prometheus.yml.j2
        dest: "{{ prometheus_dir_configuration }}/prometheus.yml"
        mode: 0755
        owner: prometheus
        group: prometheus
      notify: reload_prometheus

    - name: start prometheus
      systemd:
        name: prometheus
        state: started
        enabled: yes
  ignore_errors: True

# Grafana
- name: Install Grafana
  block:
    - name: install gpg
      apt:
        name: gnupg,software-properties-common
        state: present
        update_cache: yes
        cache_valid_time: 3600
 
    - name: add gpg Grafana
      apt_key:
        url: "https://packages.grafana.com/gpg.key"
        validate_certs: no
 
    - name: add repository Grafana
      apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"             
        state: present
        validate_certs: no

    - name: install grafana
      apt:
        name: grafana
        state: latest
        update_cache: yes
        cache_valid_time: 3600
 
    - name: start service grafana-server
      systemd:
        name: grafana-server
        state: started
        enabled: yes
 
    - name: wait for service up
      uri:
        url: "http://127.0.0.1:3000"
        status_code: 200
      register: __result
      until: __result.status == 200
      retries: 60
      delay: 1
 
    - name: change admin password for grafana gui
      shell : "grafana-cli admin reset-admin-password {{ grafana_admin_password }}"
      register: __command_admin
      changed_when: __command_admin.rc !=0

    - name: Import Main Grafana dashboard
      grafana_dashboard:
        grafana_url: http://{{ hostvars[groups['monitoring'][0]]['ansible_host']}}:3000
        grafana_user: "admin"
        grafana_password: "{{ grafana_admin_password }}"
        folder: General
        dashboard_id: 14900
  ignore_errors: True

# Alert Manager
- name: Install Alert Manager
  block:
    - name: Creating alertmanager user group
      group: name="{{ alert_manager_group }}"
      become: true

    - name: Creating alertmanager user
      user:
        name: "{{ alert_manager_user }}"
        group: "{{ alert_manager_group }}"
        system: yes
        shell: "/sbin/nologin"
        comment: "{{ alert_manager_user }} nologin User"
        createhome: "no"
        state: present

    - name: Download alertmanager
      unarchive:
        src: "https://github.com/prometheus/alertmanager/releases/download/v{{ alert_manager_version }}/alertmanager-{{ alert_manager_version }}.linux-amd64.tar.gz"
        dest: /tmp/
        remote_src: yes

    - name: Copy alertmanager executable to bin
      copy:
        src: "/tmp/alertmanager-{{ alert_manager_version }}.linux-amd64/alertmanager"
        dest: "/usr/local/bin/alertmanager"
        owner: "{{ alert_manager_user }}"
        group: "{{ alert_manager_group }}"
        remote_src: yes
        mode: 0755

    - name: Delete alertmanager tmp folder
      file:
        path: '/tmp/alertmanager-{{ alert_manager_version }}.linux-amd64'
        state: absent

    - name: Creates data directory
      file: 
        path: "/data/alertmanager/"
        state: directory
        owner: "{{ alert_manager_user }}"
        group: "{{ alert_manager_group }}"
        mode: 0755

    - name: Creates config directory
      file: 
        path: "/etc/alertmanager/"
        state: directory
        owner: "{{ alert_manager_user }}"
        group: "{{ alert_manager_group }}"
        mode: 0755

    - name: Copy config file
      copy:
        src: "{{ role_path }}/files/alertmanager.yml"
        dest: /etc/alertmanager/alertmanager.yml

    - name: alert config file
      copy:
        src: "{{ role_path }}/files/alertrules.yml"
        dest: /etc/prometheus/alertrules.yml

    - name: Copy systemd init file
      template:
        src: alertmanager.j2
        dest: /etc/systemd/system/alertmanager.service
      notify: systemd_reload

    - name: Start alertmanager service
      service:
        name: alertmanager
        state: started
        enabled: yes

    - name: Check if alertmanager is accessible
      uri:
        url: http://localhost:9093
        method: GET
        status_code: 200